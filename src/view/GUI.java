package view;

//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;

public class GUI extends JPanel implements ActionListener {
    private JButton addElem;
    private JButton deleteElem;
    private JButton saveBinary;
    private JButton loadBinary;
    private JButton findByIndex;
    private JButton balance;
    private JTextArea mainText;
    private JTextField deleteTextField;
    private JTextField findTextField;
    private JComboBox FactoryList;

    private String strName = "";

    public GUI() {
        //construct preComponents
        String[] FactoryListItems = {};

        //construct components
        addElem = new JButton ("Добавить элемент");
        deleteElem = new JButton ("Удалить элемент по индексу");
        saveBinary = new JButton ("Сохранить в двоичный");
        loadBinary = new JButton ("Загрузить из двоичного");
        findByIndex = new JButton ("Поиск по индексу");
        balance = new JButton ("Балансировка");
        mainText = new JTextArea (5, 5);
        deleteTextField = new JTextField (5);
        findTextField = new JTextField (5);
        FactoryList = new JComboBox (FactoryListItems);

        //adjust size and set layout
        setPreferredSize (new Dimension (908, 577));
        setLayout (null);

        //add components
        add (addElem);
        add (deleteElem);
        add (saveBinary);
        add (loadBinary);
        add (findByIndex);
        add (balance);
        add (mainText);
        add (deleteTextField);
        add (findTextField);
        add (FactoryList);

        //set component bounds (only needed by Absolute Positioning)
        addElem.setBounds (690, 35, 185, 45);
        deleteElem.setBounds (670, 90, 240, 25);
        saveBinary.setBounds (690, 340, 205, 35);
        loadBinary.setBounds (690, 395, 210, 30);
        findByIndex.setBounds (705, 135, 170, 40);
        balance.setBounds (700, 190, 180, 30);
        mainText.setBounds (25, 55, 495, 485);
        deleteTextField.setBounds (560, 95, 100, 25);
        findTextField.setBounds (565, 145, 100, 25);
        FactoryList.setBounds (560, 15, 100, 25);

        addElem.addActionListener(this);
        deleteElem.addActionListener(this);
        saveBinary.addActionListener(this);
        loadBinary.addActionListener(this);
        saveBinary.addActionListener(this);
        findByIndex.addActionListener(this);
    }

    public void showGui(){
        JFrame frame = new JFrame ("KiTPO. LR #1");
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add (new GUI());
        frame.pack();
        frame.setVisible (true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        // обработчик добавления элемента
        if (e.getSource() == addElem){
            //Учитывать какой ТД
            //добавление элемента
            //должен быть repaint чтобы структура рисовалась на холсте заново
        }

        // обработчик удаления элемента
        if (e.getSource() == deleteElem){
            strName = deleteTextField.getText();
            //Учитывать какой ТД
            // удаление элемента
            // должен быть repaint чтобы структура рисовалась на холсте заново
        }

        // обработчик поиска элемента по индексу
        if (e.getSource() == findByIndex){
            //Учитывать какой ТД
            strName = findTextField.getText();
            JOptionPane.showMessageDialog(null, "Вывод элемента если был найден");
            // поиск элемента элемента и вывод куда то?
        }

        // обработчик балансировки
        if (e.getSource() == balance){
            //Учитывать какой ТД
            // балансировка
            // должен быть repaint чтобы структура рисовалась на холсте заново
        }

        // обработчик сохранения
        if (e.getSource() == saveBinary){
            // сохранение в двоичный файл
        }

        // обработчик загрузки
        if (e.getSource() == loadBinary){
            // загрузка из двоичного файла
        }
    }
}